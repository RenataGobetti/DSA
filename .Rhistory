database <- read.csv(file.choose())
str(database)
database_estudo <- database[, c("Entity", "Year", "Access.to.electricity....of.population.",
"Access.to.clean.fuels.for.cooking",
"Renewable.electricity.generating.capacity.per.capita",
"gdp_per_capita")]
names(database_estudo) <- c("pais", "ano", "acesso_eletricidade_pct",
"acesso_combustiveis_limpos_pct",
"capacidade_geracao_electricidade_renovavel_per_capita",
"pib_per_capita")
head(database_estudo)
View(database_estudo)
View(database_estudo)
View(database_estudo)
View(database_estudo)
database1 <- read.csv(file.choose(
))
View(database1)
database2 <- read.csv(file.choose(
))
View(database2)
View(database2)
View(database2)
head <- database1
View(head)
View(head)
View(head)
View(head)
database <- read.csv(file.choose())
str(database)
database_estudo <- database[, c("Entity", "Year", "Access.to.electricity....of.population.",
"Access.to.clean.fuels.for.cooking",
"Renewable.electricity.generating.capacity.per.capita",
"gdp_per_capita")]
names(database_estudo) <- c("pais", "ano", "acesso_eletricidade_pct",
"acesso_combustiveis_limpos_pct",
"capacidade_geracao_electricidade_renovavel_per_capita",
"pib_per_capita")
head(database_estudo)
database1 <- read.csv(file.choose())
head(database1)
View(database1)
View(database1)
View(database1)
View(database1)
View(database1)
View(database1)
paisedados <- database1[, c("Country.Name","Series.Name" )]
View(paisedados)
paisedados <- paisedados[, -1]
View(database1)
database1 <- read.csv(file.choose())
paisedados <- database1[, c("Series.Name" )]
database1 <- read.csv(file.choose())
paisedados <- database1[, c("Country.Name","Series.Name" )]
View(paisedados)
database1 <- read.csv(file.choose())
View(database1)
database1_wrangling <- database1[, -c(2, 4)]
View(database1_wrangling)
novos_nomes <- c("country", "data", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020")
colnames(database1_wrangling) <- novos_nomes
View(database1_wrangling)
View(database1_wrangling)
library(tidyr)
library(tidyr)
database1_long <- pivot_longer(database1_wrangling, cols = -c(country, data), names_to = "ano", values_to = "valor")
View(database1_long)
View(database1_long)
database1_long <- delete
database1_transposed <- t(database1_wrangling)
View(database1_transposed)
library(tibble)
database1_transposed <- rownames_to_column(database1_transposed, var = "country")
View(database1_transposed)
library(tidyr)
database1_transposed <- pivot_longer(database1_wrangling, cols = everything(), names_to = "Year", values_to = "Value")
View(database1_transposed)
View(database1_transposed)
database <- read.csv(file.choose())
str(database)
database_estudo <- database[, c("Entity", "Year", "Access.to.electricity....of.population.",
"Access.to.clean.fuels.for.cooking",
"Renewable.electricity.generating.capacity.per.capita",
"gdp_per_capita")]
names(database_estudo) <- c("pais", "ano", "acesso_eletricidade_pct",
"acesso_combustiveis_limpos_pct",
"capacidade_geracao_electricidade_renovavel_per_capita",
"pib_per_capita")
head(database_estudo)
View(database_estudo)
View(database_estudo)
View(database_estudo)
dados <- read.csv(file.choose())
View(dados)
dados$c <- unique(dados$c)
dados_sem_duplicatas <- unique(dados$Series.Name)
head(dados)
head(dados_sem_duplicatas)
print(dados_sem_duplicatas)
database <- read.csv(file.choose())
str(database)
database_estudo <- database[, c("Entity", "Year", "Access.to.electricity....of.population.",
"Access.to.clean.fuels.for.cooking",
"Renewable.electricity.generating.capacity.per.capita",
"gdp_per_capita")]
names(database_estudo) <- c("pais", "ano", "acesso_eletricidade_pct",
"acesso_combustiveis_limpos_pct",
"capacidade_geracao_electricidade_renovavel_per_capita",
"pib_per_capita")
View(database)
View(database)
head(database)
View(database)
View(database_estudo)
database <- read.csv(file.choose())
View(database)
database_estudo <- database[, c("Entity", "Year", "Access.to.electricity....of.population.", "Value_co2_emissions_kt_by_country"
, "gdp_per_capita", "Land.Area.Km2.")]
View(database_estudo)
names(database_estudo) <- c("pais", "ano", "acesso_eletricidade_populacao_%",
"CO2_emissao_kt_por_pais",
"pib_per_capita" , "area_km2")
names(database_estudo) <- c("pais", "ano", "acesso_eletricidade_populacao_%",
"CO2_emissao_kt_por_pais",
"pib_per_capita_US$", "area_km2")
View(database_estudo)
View(database)
View(database)
View(database_estudo)
novodatabase <- read.csv(file.choose(
))
View(novodatabase)
novodatabase2 <- read.csv(file.choose())
View(novodatabase2)
View(novodatabase)
novodatabase <- read.csv(file.choose(
))
View(novodatabase)
novodatabase <- novodatabase[, -c(2, 3)]
View(novodatabase)
novodatabase <- read.csv(file.choose(
))
View(novodatabase)
novodatabase <- novodatabase[, -c(2, 4)]
database <- read.csv(file.choose())
novos_nomes <- c("pais", "series.name", paste0(2000:2020))
novodatabase <- c("pais", "series.name", paste0(2000:2020))
novodatabase <- read.csv(file.choose(
))
novodatabase <- novodatabase[, -c(2, 4)]
novos_nomes <- c("pais", "series.name", paste0(2000:2020))
colnames(novodatabase) <- novos_nomes
View(novodatabase)
head(novodatabase)
colnames(novodatabase) <- c("pais", "series.name", as.character(2000:2020))
novodatabase_long <- pivot_longer(novodatabase, cols = -c(pais, series.name), names_to = "ano", values_to = "valor")
novodatabase_split <- split(novodatabase_long, novodatabase_long$series.name)
novodatabase_transformado <- Reduce(function(...) merge(..., all = TRUE), novodatabase_split)
colnames(novodatabase_transformado)[2:ncol(novodatabase_transformado)] <- unique(novodatabase$series.name)
novodatabase_transformado <- novodatabase_transformado[, c("pais", unique(novodatabase$series.name))]
View(novodatabase_transformado)
View(novodatabase_transformado)
head(novodatabase_transformado)
library(tidyr)
library(tidyr)
novodatabase_transformado <- pivot_wider(novodatabase, names_from = "series.name", values_from = -c(pais))
novodatabase_transformado <- novodatabase_transformado[, c("pais", sort(unique(novodatabase$series.name)))]
head(novodatabase_transformado)
colnames(novodatabase) <- c("pais", "series.name", as.character(2000:2020))
novodatabase_transformado <- pivot_wider(novodatabase, names_from = "series.name", values_from = as.character(2000:2020))
head(novodatabase_transformado)
# Importar pacote necessário
library(dplyr)
# Renomear as colunas
colnames(novodatabase) <- c("pais", "series.name", as.character(2000:2020))
# Função para renomear colunas
renomear_colunas <- function(df, prefixo) {
colnames(df) <- c("pais", "series.name", paste0(prefixo, as.character(2000:2020)))
return(df)
}
# Filtrar por métrica e renomear colunas
expectativa_vida <- novodatabase %>%
filter(series.name == "Life expectancy at birth, total (years)") %>%
renomear_colunas("expectativa_vida_")
populacao_total <- novodatabase %>%
filter(series.name == "Population, total") %>%
renomear_colunas("populacao_total_")
consumo_energia <- novodatabase %>%
filter(series.name == "Electric power consumption (kWh per capita)") %>%
renomear_colunas("consumo_energia_")
# Combinar os dataframes
novodatabase_transformado <- full_join(expectativa_vida, populacao_total, by = "pais") %>%
full_join(., consumo_energia, by = "pais")
# Visualizar as primeiras linhas do dataframe transformado
head(novodatabase_transformado)
View(novodatabase_transformado)
# Importar pacote necessário
library(tidyr)
# Renomear as colunas
colnames(novodatabase) <- c("pais", "series.name", as.character(2000:2020))
# Pivotar os dados para ter anos como uma única coluna
novodatabase_long <- pivot_longer(novodatabase, cols = -c(pais, series.name), names_to = "ano", values_to = "valor")
# Pivotar novamente para ter as métricas como colunas
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor)
# Visualizar as primeiras linhas do dataframe transformado
head(novodatabase_transformado)
novodatabase <- read.csv(file.choose(
))
novodatabase <- novodatabase[, -c(2, 4)]
novos_nomes <- c("pais", "series.name", paste0(2000:2020))
colnames(novodatabase) <- novos_nomes
head(novodatabase)
# Importar pacote necessário
library(tidyr)
# Renomear as colunas
colnames(novodatabase) <- c("pais", "series.name", as.character(2000:2020))
# Pivotar os dados para ter anos como uma única coluna
novodatabase_long <- pivot_longer(novodatabase, cols = -c(pais, series.name), names_to = "ano", values_to = "valor")
# Pivotar novamente para ter as métricas como colunas
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor)
# Visualizar as primeiras linhas do dataframe transformado
head(novodatabase_transformado)
# Pivotar novamente para ter as métricas como colunas
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor)
# Importar pacote necessário
library(tidyr)
# Pivotar novamente para ter as métricas como colunas
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor)
View(novodatabase_long)
head(novodatabase_long)
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor)
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor)
head(novodatabase_transformado)
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor)
novodatabase_transformado <- pivot_wider(novodatabase_long, names_from = series.name, values_from = valor, values_fn = list)
head(novodatabase_long)
library(dplyr) # Se necessário, carregue a biblioteca dplyr
# Filtrar as linhas não vazias e ordenar por país
novodatabase_long %>%
filter(pais != "") %>%
arrange(pais) %>%
head(63) # Mostrar as primeiras 63 linhas
View(novodatabase_long)
library(dplyr) # Se necessário, carregue a biblioteca dplyr
# Filtrar as linhas onde a coluna "pais" não está vazia
novodatabase_long <- novodatabase_long %>%
filter(pais != "")
# Filtrar as linhas onde a coluna "pais" não está vazia
novodatabase_long <- novodatabase_long %>%
filter(pais != "")
str(novodatabase_long)
novodatabase_long <- novodatabase_long %>%
filter(pais != "Data from database: World Development Indicators")
novodatabase_long <- novodatabase_long %>%
filter(pais != "Last Updated: 03/28/2024")
library(tidyr)
novodatabase_long <- novodatabase_long %>%
pivot_wider(names_from = series.name, values_from = valor)
names(database_estudo) <- c("pais", "ano", "acesso_eletricidade_populacao_%",
"CO2_emissao_kt_por_pais",
"pib_per_capita_US$", "area_km2")
